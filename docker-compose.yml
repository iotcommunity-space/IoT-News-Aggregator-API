version: '3.8'

services:
  # MongoDB Database - AVX Compatible Version
  mongodb:
    image: mongo:4.4
    container_name: iot_news_mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_DATABASE: iot_news_api
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./docker/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - iot_news_network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo localhost:27017/iot_news_api --quiet
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

  # IoT News API Application
  iot-news-api:
    build: .
    container_name: iot_news_api
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "${PORT:-3000}:3000"
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - iot_news_network
    volumes:
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # IoT News Web Dashboard with Authentication
  iot-news-dashboard:
    build:
      context: ./dashboard
      dockerfile: Dockerfile
    container_name: iot_news_dashboard
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "${DASHBOARD_PORT:-4000}:4000"
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - iot_news_network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:4000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # MongoDB Admin Interface (Optional)
  mongo-express:
    image: mongo-express:0.54
    container_name: iot_news_mongo_express
    restart: unless-stopped
    environment:
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_BASICAUTH_USERNAME: ${MONGO_ADMIN_USER:-admin}
      ME_CONFIG_BASICAUTH_PASSWORD: ${MONGO_ADMIN_PASS:-password123}
    ports:
      - "8081:8081"
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - iot_news_network

volumes:
  mongodb_data:
    driver: local

networks:
  iot_news_network:
    driver: bridge
